group 'io.soluble.pjb'
version '6.2.11'
def artifactId = 'JavaBridge'
description 'A PHP/Java bridge'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.5'
        //classpath 'org.ajoberstar:gradle-git:1.6.0'
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'   // provides embedded tomcat 7 for testing purposes
// required for publishing to MavenCentral
apply plugin: 'signing'
apply plugin: 'maven'
//apply plugin: 'github-pages'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    providedCompile('javax.servlet:servlet-api:2.5')
    runtime('log4j:log4j:1.2.17')
    testCompile('junit:junit:3.8.2')    // the test code still uses this junit API
    
    def tomcatVersion = '7.0.59'
    tomcat(
            "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
    )
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

if (System.getProperty('php_exec') == null) {
    ant.properties['php_exec'] = 'php'
}

ant.importBuild 'build.xml'

jar {
    baseName artifactId
    manifest {
    attributes('Main-Class': 'io.soluble.pjb.bridge.Standalone')
    }
}

war {
  baseName artifactId
  //from 'src/rootContent' // could add a file-set to the root of the archive
}

tomcatRun {
    contextPath = '/'
    httpPort = 8090;
    outputFile = file('./tomcat.log')
//    httpsPort = 8091
//    enableSSL = true
    daemon = true
}

jacocoTestReport {
    group = 'Reporting'
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    baseName = artifactId
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    baseName = artifactId
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar, sourcesJar, javadocJar
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}


uploadArchives {
    repositories {
        mavenDeployer {
            pom.project {
                name = project.name
                artifactId = artifactId
                packaging 'jar'
                url 'https://github.com/belgattitude/php-java-bridge'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'youraccount'
                        name = 'Your Name'
                        email = 'your.account@mail.com'
                    }
                }
            }
        }
    }
}

/*
githubPages {
    repoUri = 'git@github.com:belgattitude/php-java-bridge.git'

    pages {
        from(javadoc.outputs.files) {
            into 'docs/javadoc'
        }
        from(groovydoc.outputs.files) {
            into 'docs/groovydoc'
        }
    }
}*/
