group 'io.soluble.pjb'
version '6.2.11'
def artifactName = 'JavaBridge'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.5'
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'   // provides embedded tomcat 7 for testing purposes

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    providedCompile('javax.servlet:servlet-api:2.5')
    runtime('log4j:log4j:1.2.17')
    testCompile('junit:junit:3.8.2')    // the test code still uses this junit API
    
    def tomcatVersion = '7.0.59'
    tomcat 'org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}',
            'org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}'
    tomcat('org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}') {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

if (System.getProperty('php_exec') == null) {
    ant.properties['php_exec'] = 'php'
}

ant.importBuild 'build.xml'

jar {
    baseName artifactName
    manifest {
        attributes('Main-Class': 'io.soluble.pjb.Standalone')
    }
}

war {
  baseName artifactName
  //from 'src/rootContent' // could add a file-set to the root of the archive
}

tomcatRun {
    contextPath = '/'
    httpPort = 8090
//    httpsPort = 8091
//    enableSSL = true
    daemon = true
}

jacocoTestReport {
    group = 'Reporting'
    reports {
        xml.enabled true
        csv.enabled false
        html.destination '${buildDir}/reports/coverage'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    baseName = artifactName
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    baseName = artifactName
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}
